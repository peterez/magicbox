<?phpif(empty($_mb_dir_)) { exit('sorry'); }/* for WP 5.3 early */if(!function_exists('wp_get_registered_image_subsizes')) {function wp_get_registered_image_subsizes() {    $additional_sizes = wp_get_additional_image_sizes();    $all_sizes        = array();    foreach ( get_intermediate_image_sizes() as $size_name ) {        $size_data = array(            'width'  => 0,            'height' => 0,            'crop'   => false,        );        if ( isset( $additional_sizes[ $size_name ]['width'] ) ) {            // For sizes added by plugins and themes.            $size_data['width'] = (int) $additional_sizes[ $size_name ]['width'];        } else {            // For default sizes set in options.            $size_data['width'] = (int) get_option( "{$size_name}_size_w" );        }        if ( isset( $additional_sizes[ $size_name ]['height'] ) ) {            $size_data['height'] = (int) $additional_sizes[ $size_name ]['height'];        } else {            $size_data['height'] = (int) get_option( "{$size_name}_size_h" );        }        if ( empty( $size_data['width'] ) && empty( $size_data['height'] ) ) {            // This size isn't set.            continue;        }        if ( isset( $additional_sizes[ $size_name ]['crop'] ) ) {            $size_data['crop'] = $additional_sizes[ $size_name ]['crop'];        } else {            $size_data['crop'] = get_option( "{$size_name}_crop" );        }        if ( ! is_array( $size_data['crop'] ) || empty( $size_data['crop'] ) ) {            $size_data['crop'] = (bool) $size_data['crop'];        }        $all_sizes[ $size_name ] = $size_data;    }    return $all_sizes;}}if(!function_exists('magicbox_clearIllegalDomainKeywords')) {function magicbox_clearIllegalDomainKeywords($domain) {    $parse = parse_url($domain);    if(magicbox_isUrl($domain)) {        $domain = $parse['host'];    } else {        $domain = trim($parse['path'],"/");        if(strstr($domain,"/")) {            $ex = explode("/",$domain);            $domain = trim($ex[0]);            if($domain =="") {                $domain = trim($ex[1]);            }            if($domain =="") {                $domain = $parse['path'];            }        }    }    $domain = str_replace(        array("'","/",'"',"_","\\"," ","~","}","{","#","]","[","*","?",")","(","&","%","+","^","!",">","<","£",'$',"½",":",";"),        "",$domain);    return trim(trim(strip_tags($domain)),"/");}}if(!function_exists('magicbox_checkUserAgent')) {function magicbox_checkUserAgent(){    $tablet_browser = 0;    $mobile_browser = 0;    if (preg_match('/(tablet|ipad|playbook)|(android(?!.*(mobi|opera mini)))/i', strtolower($_SERVER['HTTP_USER_AGENT']))) {        $tablet_browser++;    }    if (preg_match('/(up.browser|up.link|mmp|symbian|smartphone|midp|wap|phone|android|iemobile)/i', strtolower($_SERVER['HTTP_USER_AGENT']))) {        $mobile_browser++;    }    if ((strpos(strtolower($_SERVER['HTTP_ACCEPT']), 'application/vnd.wap.xhtml+xml') > 0) or ((isset($_SERVER['HTTP_X_WAP_PROFILE']) or isset($_SERVER['HTTP_PROFILE'])))) {        $mobile_browser++;    }    $mobile_ua = strtolower(substr($_SERVER['HTTP_USER_AGENT'], 0, 4));    $mobile_agents = array(        'w3c ', 'acs-', 'alav', 'alca', 'amoi', 'audi', 'avan', 'benq', 'bird', 'blac',        'blaz', 'brew', 'cell', 'cldc', 'cmd-', 'dang', 'doco', 'eric', 'hipt', 'inno',        'ipaq', 'java', 'jigs', 'kddi', 'keji', 'leno', 'lg-c', 'lg-d', 'lg-g', 'lge-',        'maui', 'maxo', 'midp', 'mits', 'mmef', 'mobi', 'mot-', 'moto', 'mwbp', 'nec-',        'newt', 'noki', 'palm', 'pana', 'pant', 'phil', 'play', 'port', 'prox',        'qwap', 'sage', 'sams', 'sany', 'sch-', 'sec-', 'send', 'seri', 'sgh-', 'shar',        'sie-', 'siem', 'smal', 'smar', 'sony', 'sph-', 'symb', 't-mo', 'teli', 'tim-',        'tosh', 'tsm-', 'upg1', 'upsi', 'vk-v', 'voda', 'wap-', 'wapa', 'wapi', 'wapp',        'wapr', 'webc', 'winw', 'winw', 'xda ', 'xda-');    if (in_array($mobile_ua, $mobile_agents)) {        $mobile_browser++;    }    if (strpos(strtolower($_SERVER['HTTP_USER_AGENT']), 'opera mini') > 0) {        $mobile_browser++;        $stock_ua = strtolower(isset($_SERVER['HTTP_X_OPERAMINI_PHONE_UA']) ? $_SERVER['HTTP_X_OPERAMINI_PHONE_UA'] : (isset($_SERVER['HTTP_DEVICE_STOCK_UA']) ? $_SERVER['HTTP_DEVICE_STOCK_UA'] : ''));        if (preg_match('/(tablet|ipad|playbook)|(android(?!.*mobile))/i', $stock_ua)) {            $tablet_browser++;        }    }    if ($tablet_browser > 0) {        return "tablet";    } elseif ($mobile_browser > 0) {        return "mobile";    } else {        return "all";    }}}if(!function_exists('magicbox_redirect')) {function magicbox_redirect($url,$status=301) {    if($status=="" or !is_numeric($status)) {        $status = 301;    }    wp_redirect($url,$status);    echo "<script>window.location='".$url."'</script>";    echo '<meta http-equiv="refresh" content="1;url='.$url.'" />';}}if(!function_exists('magicbox_getFile')) {function magicbox_getFile($file) {    return @file_get_contents($file);    $string = "";    $handle = fopen($file, "r");    /* Read line by line */    while(!feof($handle)) {        $string .= trim(@fgets($handle));    }    fclose($handle);    if($string=="") {        $string = @file_get_contents($file);    }    return $string;}}if(!function_exists('magicbox_hasTextInUrl')) {function magicbox_hasTextInUrl($text,$url="") {    if($text =="") {        return false;    }    $textLenWidthPlusOne = strlen($text)+1;    if($url =="") {        $url = $_SERVER['REQUEST_URI'];    }    $explode = explode("/",$url);    $has = false;    foreach($explode as $value) {        if($value ==$text) {            $has = true;        }        $longValue = substr($value,0,$textLenWidthPlusOne);        if($longValue ==$text."?") {            $has = true;        }        if($longValue ==$text."&") {            $has = true;        }        if($longValue ==$text."#") {            $has = true;        }    }    if($has==false) {        if(strstr($text,"/") and strstr($url,$text)) {            $has = true;        }    }    return  $has;}}if(!function_exists('magicbox_makeTitle2Filename')) {function magicbox_makeTitle2Filename($value) {    $value = str_replace("mb-", "", $value);    $value = str_replace("mb_", "", $value);    $value = str_replace("_", " ", $value);    $value = magicbox_strUpDown($value, "fullCapitalize");    return $value;}}if(!function_exists('magicbox_isUrl')) {function magicbox_isUrl($url){    if ($url == "") {        return false;    }    if (substr($url, 0, 12) == "//localhost/") {        return "http:" . $url;    }    if (substr($url, 0, 17) == "http://localhost/") {        return $url;    }    if (substr($url, 0, 2) == "//") {        $url = "http:" . $url;    }    $subStr = substr($url, 0, 6);    if ($subStr != "http:/" and $subStr != "https:") {        $url = "http://" . $url;    }    $parse = parse_url($url);    if (!strstr($parse['host'], ".")) {        return false;    }    if (filter_var(($url), FILTER_VALIDATE_URL)) {        return $url;    } else {        return false;    }}}if(!function_exists('magicbox_getUserIp')) {function magicbox_getUserIp(){        foreach (array('HTTP_CLIENT_IP', 'HTTP_X_FORWARDED_FOR', 'HTTP_X_FORWARDED', 'HTTP_X_CLUSTER_CLIENT_IP', 'HTTP_FORWARDED_FOR', 'HTTP_FORWARDED', 'REMOTE_ADDR') as $key)        {            if (array_key_exists($key, $_SERVER) === true)            {                foreach (array_map('trim', explode(',', $_SERVER[$key])) as $ip)                {                    if (filter_var($ip, FILTER_VALIDATE_IP) != false)                    {                        return $ip;                    }                }            }        }    return false;}}if(!function_exists('magicbox_checkMail')) {function magicbox_checkMail($mail){    if (trim($mail) == "") {        return false;    }    return filter_var($mail, FILTER_VALIDATE_EMAIL);}}if(!function_exists('magicbox_number')) {function magicbox_number($number, $deger = ""){    $number = preg_replace("@[^0-9$deger]+@i", '', strip_tags($number));    if ($number == "") {        return 0;    }    if (is_numeric($number)) {        return $number;    }    return false;}}if(!function_exists('magicbox_text')) {function magicbox_text($text, $deger = ""){    $text = preg_replace("@[^A-Za-z0-9şıöüğçİŞÖĞÜÇ$deger ]+@i", "", strip_tags($text));    return $text;}}if(!function_exists('magicbox_justTextNumber')) {function magicbox_justTextNumber($text, $deger = ""){    $text = preg_replace("@[^A-Za-z$deger]+@i", "", strip_tags($text));    $text = trim($text);    return $text;}}if(!function_exists('magicbox_strUpDown')) {function magicbox_strUpDown($text, $type = "up",$isTr = false){    if ($type == "up") {        if($isTr) {            $text = str_replace(                array(                    'ı',                    'i',                    'ğ',                    'ü',                    'ş',                    'ö',                    'ç'                ),                array(                    'I',                    'İ',                    'Ğ',                    'Ü',                    'Ş',                    'Ö',                    'Ç'                ),                $text            );        }        return mb_strtoupper(            $text,            'utf-8'        );    }    if ($type == "down") {        if($isTr) {            $text = str_replace(                array(                    'I',                    'İ',                    'Ğ',                    'Ü',                    'Ş',                    'Ö',                    'Ç'                ),                array(                    'ı',                    'i',                    'ğ',                    'ü',                    'ş',                    'ö',                    'ç'                ),                $text            );        }        return mb_strtolower(            $text,            'utf-8'        );    }    if ($type == "fullCapitalize") {        $text = str_replace(array(",", ":", ";"), array(", ", ": ", "; "), $text);        $explode = explode(" ", $text);        $text = "";        foreach ($explode as $item) {            if ($item == magicbox_strUpDown("ve", "down") or $item == magicbox_strUpDown("veya", "down") or $item == magicbox_strUpDown(                    "ya",                    "down"                ) or $item == magicbox_strUpDown("yada", "down") or $item == magicbox_strUpDown("da", "down")            ) {                $text .= magicbox_strUpDown($item, "down") . " ";            } else {                $text .= magicbox_strUpDown(trim($item), "capitalize") . " ";            }        }        return $text;    }    if ($type == "capitalize") {        $text = str_replace(array(",", ":", ";"), array(", ", ": ", "; "), $text);        $text = magicbox_strUpDown(mb_substr(trim($text), 0, 1, 'UTF-8'), "up") . magicbox_strUpDown(                mb_substr(trim($text), 1, strlen($text) + 100, 'UTF-8'),                "down"            );        $text = str_replace(array(",", ":", ";"), array(", ", ": ", "; "), $text);        return $text;    }}}if(!function_exists('magicbox_fixMoney')) {function magicbox_fixMoney($para, $number = 2, $cevir = ".", $degis = ","){    $para = magicbox_number($para, ".\-");    if (substr($para, 0, 1) != "-") {        $para = str_replace("-", "", $para);    } else {        $para = str_replace("-", "", $para);        $para = "-" . $para;    }    return magicbox_number(number_format($para, $number, $cevir, $degis), ".\-");}}?>