<?php  class Magicbox_CacheFile{    private static $instance = NULL;    private $cachePath;    private $fullCachePath;    private $lifeTime = 43200;    protected function __construct($args)    {        $this->fullCachePath = $this->cachePath = $GLOBALS{'_mb_cache_'};        if (@$args['path'] != "") {            $this->cachePath = @$args['path'];        }        if (@$args['lifeTime'] != "") {            $this->lifeTime = @$args['lifeTime'];        }    }    /* Singleton Pattern */    public static function  getInstance($args = array())    {        if (self::$instance == NULL) {            return self::$instance[md5(serialize($args))] = new Magicbox_CacheFile($args);        }        return self::$instance[md5(serialize($args))];    }    function flush($dir = "")    {        if ($dir == "") {            $dir = $this->cachePath;        }            $scan = @scandir($dir);            foreach ($scan as $file) {                if($file =="." or $file =="..") {                    continue;                }                if (is_dir($dir."/".$file)) {                    if (@rmdir($dir."/".$file) == false) {                        $this->flush($dir."/".$file);                    }                } else {                    @unlink($dir."/".$file);                }            }    }    public function get($key)    {        $pathName = $this->makePathFromName($key);        $data = magicbox_getFile($pathName);        $filetime = intval(@filemtime($pathName));        if ($filetime + $this->lifeTime - time() <= 0) {            @unlink($pathName);        }        return $data;}    public function set($key, $data)    {        $pathName = $this->makePathFromName($key);        return @file_put_contents($pathName, $data);    }    public function delete($key)    {        $pathName = $this->makePathFromName($key);        @unlink($pathName);    }    private function makePathFromName($name)    {        $name = str_replace("mb_cache_", "", $name);        /* Its necessary for limit problems */        if ($name == "") {            $path = "nameless";        } else {            $path = "";            if ($name[2] != "") {                $path .= $name[2] . "/";            }            if ($name[0] != "") {                $path .= $name[0] . "/";            }            if ($name[1] != "") {                $path .= $name[1] . "/";            }            $path = trim($path, "/");        }        if ($name == "") {            $path = "nameless";        }        $this->fullCachePath = $this->cachePath . "/" . $path;        @mkdir($this->fullCachePath, 0755,true);        $this->fullCachePath = $this->fullCachePath."/mb_cache_" . md5($name) . ".cache";        return $this->fullCachePath;    }}?>