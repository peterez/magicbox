<?php  class Magicbox_CacheRedis{    private static $instance = NULL;    private $lifeTime = 43200;    protected function __construct($args)    {        $this->redis = new RedisServer();        $this->redis->connect($args['host'], $args['port']);        if($args['user'] !="" and $args['password'] !="") {            $this->auth($args);        }    }    /* Singleton Pattern */    public static function  getInstance($args = array())    {        $args['host'] = $args['host'] == "" ? "127.0.0.1" : $args['host'];        $args['port'] = $args['port'] == "" ? "6379" : $args['port'];        if (self::$instance == NULL) {            return self::$instance[md5(serialize($args))] = new Magicbox_CacheRedis($args);        }        return self::$instance[md5(serialize($args))];    }    function flush()    {        $keys = $this->redis->keys('mb_cache_:*');            foreach ($keys as $key) {                $this->redis->del($key);            }    }    public function get($key)    {        return $this->redis->get($key);    }    public function set($key, $data)    {        return $this->redis->set(            $key,            $data,            $this->lifeTime        );    }    public function delete($key)    {        return $this->redis->del($key);    }    protected function auth($config = array())    {        if ($this->getVersion() >= 6) {                $this->redis->auth([                    $config['user'],                    $config['password'],                ]);            return;        }            $this->redis->auth($config['pass']);    }    protected function getVersion()    {        $info = $this->redis->info();        return (int) $info['redis_version'];    }}?>